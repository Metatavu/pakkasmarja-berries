/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RequiredActionProviderRepresentation
 */
export interface RequiredActionProviderRepresentation {
    /**
     * 
     * @type {string}
     * @memberof RequiredActionProviderRepresentation
     */
    alias?: string;
    /**
     * 
     * @type {string}
     * @memberof RequiredActionProviderRepresentation
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof RequiredActionProviderRepresentation
     */
    providerId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RequiredActionProviderRepresentation
     */
    enabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RequiredActionProviderRepresentation
     */
    defaultAction?: boolean;
    /**
     * 
     * @type {number}
     * @memberof RequiredActionProviderRepresentation
     */
    priority?: number;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof RequiredActionProviderRepresentation
     */
    config?: { [key: string]: string; };
}

/**
 * Check if a given object implements the RequiredActionProviderRepresentation interface.
 */
export function instanceOfRequiredActionProviderRepresentation(value: object): boolean {
    return true;
}

export function RequiredActionProviderRepresentationFromJSON(json: any): RequiredActionProviderRepresentation {
    return RequiredActionProviderRepresentationFromJSONTyped(json, false);
}

export function RequiredActionProviderRepresentationFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequiredActionProviderRepresentation {
    if (json == null) {
        return json;
    }
    return {
        
        'alias': json['alias'] == null ? undefined : json['alias'],
        'name': json['name'] == null ? undefined : json['name'],
        'providerId': json['providerId'] == null ? undefined : json['providerId'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'defaultAction': json['defaultAction'] == null ? undefined : json['defaultAction'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'config': json['config'] == null ? undefined : json['config'],
    };
}

export function RequiredActionProviderRepresentationToJSON(value?: RequiredActionProviderRepresentation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'alias': value['alias'],
        'name': value['name'],
        'providerId': value['providerId'],
        'enabled': value['enabled'],
        'defaultAction': value['defaultAction'],
        'priority': value['priority'],
        'config': value['config'],
    };
}

