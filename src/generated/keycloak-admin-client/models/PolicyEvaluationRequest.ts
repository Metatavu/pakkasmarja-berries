/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResourceRepresentation } from './ResourceRepresentation';
import {
    ResourceRepresentationFromJSON,
    ResourceRepresentationFromJSONTyped,
    ResourceRepresentationToJSON,
} from './ResourceRepresentation';

/**
 * 
 * @export
 * @interface PolicyEvaluationRequest
 */
export interface PolicyEvaluationRequest {
    /**
     * 
     * @type {{ [key: string]: { [key: string]: string; }; }}
     * @memberof PolicyEvaluationRequest
     */
    context?: { [key: string]: { [key: string]: string; }; };
    /**
     * 
     * @type {Array<ResourceRepresentation>}
     * @memberof PolicyEvaluationRequest
     */
    resources?: Array<ResourceRepresentation>;
    /**
     * 
     * @type {string}
     * @memberof PolicyEvaluationRequest
     */
    clientId?: string;
    /**
     * 
     * @type {string}
     * @memberof PolicyEvaluationRequest
     */
    userId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PolicyEvaluationRequest
     */
    roleIds?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof PolicyEvaluationRequest
     */
    entitlements?: boolean;
}

/**
 * Check if a given object implements the PolicyEvaluationRequest interface.
 */
export function instanceOfPolicyEvaluationRequest(value: object): boolean {
    return true;
}

export function PolicyEvaluationRequestFromJSON(json: any): PolicyEvaluationRequest {
    return PolicyEvaluationRequestFromJSONTyped(json, false);
}

export function PolicyEvaluationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PolicyEvaluationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'context': json['context'] == null ? undefined : json['context'],
        'resources': json['resources'] == null ? undefined : ((json['resources'] as Array<any>).map(ResourceRepresentationFromJSON)),
        'clientId': json['clientId'] == null ? undefined : json['clientId'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'roleIds': json['roleIds'] == null ? undefined : json['roleIds'],
        'entitlements': json['entitlements'] == null ? undefined : json['entitlements'],
    };
}

export function PolicyEvaluationRequestToJSON(value?: PolicyEvaluationRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'context': value['context'],
        'resources': value['resources'] == null ? undefined : ((value['resources'] as Array<any>).map(ResourceRepresentationToJSON)),
        'clientId': value['clientId'],
        'userId': value['userId'],
        'roleIds': value['roleIds'],
        'entitlements': value['entitlements'],
    };
}

