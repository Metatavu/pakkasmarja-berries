/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DecisionEffect } from './DecisionEffect';
import {
    DecisionEffectFromJSON,
    DecisionEffectFromJSONTyped,
    DecisionEffectToJSON,
} from './DecisionEffect';
import type { PolicyRepresentation } from './PolicyRepresentation';
import {
    PolicyRepresentationFromJSON,
    PolicyRepresentationFromJSONTyped,
    PolicyRepresentationToJSON,
} from './PolicyRepresentation';

/**
 * 
 * @export
 * @interface PolicyResultRepresentation
 */
export interface PolicyResultRepresentation {
    /**
     * 
     * @type {PolicyRepresentation}
     * @memberof PolicyResultRepresentation
     */
    policy?: PolicyRepresentation;
    /**
     * 
     * @type {DecisionEffect}
     * @memberof PolicyResultRepresentation
     */
    status?: DecisionEffect;
    /**
     * 
     * @type {Array<PolicyResultRepresentation>}
     * @memberof PolicyResultRepresentation
     */
    associatedPolicies?: Array<PolicyResultRepresentation>;
    /**
     * 
     * @type {Set<string>}
     * @memberof PolicyResultRepresentation
     */
    scopes?: Set<string>;
}

/**
 * Check if a given object implements the PolicyResultRepresentation interface.
 */
export function instanceOfPolicyResultRepresentation(value: object): boolean {
    return true;
}

export function PolicyResultRepresentationFromJSON(json: any): PolicyResultRepresentation {
    return PolicyResultRepresentationFromJSONTyped(json, false);
}

export function PolicyResultRepresentationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PolicyResultRepresentation {
    if (json == null) {
        return json;
    }
    return {
        
        'policy': json['policy'] == null ? undefined : PolicyRepresentationFromJSON(json['policy']),
        'status': json['status'] == null ? undefined : DecisionEffectFromJSON(json['status']),
        'associatedPolicies': json['associatedPolicies'] == null ? undefined : ((json['associatedPolicies'] as Array<any>).map(PolicyResultRepresentationFromJSON)),
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
    };
}

export function PolicyResultRepresentationToJSON(value?: PolicyResultRepresentation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'policy': PolicyRepresentationToJSON(value['policy']),
        'status': DecisionEffectToJSON(value['status']),
        'associatedPolicies': value['associatedPolicies'] == null ? undefined : ((value['associatedPolicies'] as Array<any>).map(PolicyResultRepresentationToJSON)),
        'scopes': value['scopes'] == null ? undefined : Array.from(value['scopes'] as Set<any>),
    };
}

