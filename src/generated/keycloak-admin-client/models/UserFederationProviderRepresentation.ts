/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserFederationProviderRepresentation
 */
export interface UserFederationProviderRepresentation {
    /**
     * 
     * @type {string}
     * @memberof UserFederationProviderRepresentation
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UserFederationProviderRepresentation
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserFederationProviderRepresentation
     */
    providerName?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof UserFederationProviderRepresentation
     */
    config?: { [key: string]: string; };
    /**
     * 
     * @type {number}
     * @memberof UserFederationProviderRepresentation
     */
    priority?: number;
    /**
     * 
     * @type {number}
     * @memberof UserFederationProviderRepresentation
     */
    fullSyncPeriod?: number;
    /**
     * 
     * @type {number}
     * @memberof UserFederationProviderRepresentation
     */
    changedSyncPeriod?: number;
    /**
     * 
     * @type {number}
     * @memberof UserFederationProviderRepresentation
     */
    lastSync?: number;
}

/**
 * Check if a given object implements the UserFederationProviderRepresentation interface.
 */
export function instanceOfUserFederationProviderRepresentation(value: object): boolean {
    return true;
}

export function UserFederationProviderRepresentationFromJSON(json: any): UserFederationProviderRepresentation {
    return UserFederationProviderRepresentationFromJSONTyped(json, false);
}

export function UserFederationProviderRepresentationFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserFederationProviderRepresentation {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'providerName': json['providerName'] == null ? undefined : json['providerName'],
        'config': json['config'] == null ? undefined : json['config'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'fullSyncPeriod': json['fullSyncPeriod'] == null ? undefined : json['fullSyncPeriod'],
        'changedSyncPeriod': json['changedSyncPeriod'] == null ? undefined : json['changedSyncPeriod'],
        'lastSync': json['lastSync'] == null ? undefined : json['lastSync'],
    };
}

export function UserFederationProviderRepresentationToJSON(value?: UserFederationProviderRepresentation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'displayName': value['displayName'],
        'providerName': value['providerName'],
        'config': value['config'],
        'priority': value['priority'],
        'fullSyncPeriod': value['fullSyncPeriod'],
        'changedSyncPeriod': value['changedSyncPeriod'],
        'lastSync': value['lastSync'],
    };
}

