/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApplicationRepresentation } from './ApplicationRepresentation';
import {
    ApplicationRepresentationFromJSON,
    ApplicationRepresentationFromJSONTyped,
    ApplicationRepresentationToJSON,
} from './ApplicationRepresentation';
import type { AuthenticationFlowRepresentation } from './AuthenticationFlowRepresentation';
import {
    AuthenticationFlowRepresentationFromJSON,
    AuthenticationFlowRepresentationFromJSONTyped,
    AuthenticationFlowRepresentationToJSON,
} from './AuthenticationFlowRepresentation';
import type { AuthenticatorConfigRepresentation } from './AuthenticatorConfigRepresentation';
import {
    AuthenticatorConfigRepresentationFromJSON,
    AuthenticatorConfigRepresentationFromJSONTyped,
    AuthenticatorConfigRepresentationToJSON,
} from './AuthenticatorConfigRepresentation';
import type { ClientPoliciesRepresentation } from './ClientPoliciesRepresentation';
import {
    ClientPoliciesRepresentationFromJSON,
    ClientPoliciesRepresentationFromJSONTyped,
    ClientPoliciesRepresentationToJSON,
} from './ClientPoliciesRepresentation';
import type { ClientProfilesRepresentation } from './ClientProfilesRepresentation';
import {
    ClientProfilesRepresentationFromJSON,
    ClientProfilesRepresentationFromJSONTyped,
    ClientProfilesRepresentationToJSON,
} from './ClientProfilesRepresentation';
import type { ClientRepresentation } from './ClientRepresentation';
import {
    ClientRepresentationFromJSON,
    ClientRepresentationFromJSONTyped,
    ClientRepresentationToJSON,
} from './ClientRepresentation';
import type { ClientScopeRepresentation } from './ClientScopeRepresentation';
import {
    ClientScopeRepresentationFromJSON,
    ClientScopeRepresentationFromJSONTyped,
    ClientScopeRepresentationToJSON,
} from './ClientScopeRepresentation';
import type { ClientTemplateRepresentation } from './ClientTemplateRepresentation';
import {
    ClientTemplateRepresentationFromJSON,
    ClientTemplateRepresentationFromJSONTyped,
    ClientTemplateRepresentationToJSON,
} from './ClientTemplateRepresentation';
import type { GroupRepresentation } from './GroupRepresentation';
import {
    GroupRepresentationFromJSON,
    GroupRepresentationFromJSONTyped,
    GroupRepresentationToJSON,
} from './GroupRepresentation';
import type { IdentityProviderMapperRepresentation } from './IdentityProviderMapperRepresentation';
import {
    IdentityProviderMapperRepresentationFromJSON,
    IdentityProviderMapperRepresentationFromJSONTyped,
    IdentityProviderMapperRepresentationToJSON,
} from './IdentityProviderMapperRepresentation';
import type { IdentityProviderRepresentation } from './IdentityProviderRepresentation';
import {
    IdentityProviderRepresentationFromJSON,
    IdentityProviderRepresentationFromJSONTyped,
    IdentityProviderRepresentationToJSON,
} from './IdentityProviderRepresentation';
import type { OAuthClientRepresentation } from './OAuthClientRepresentation';
import {
    OAuthClientRepresentationFromJSON,
    OAuthClientRepresentationFromJSONTyped,
    OAuthClientRepresentationToJSON,
} from './OAuthClientRepresentation';
import type { ProtocolMapperRepresentation } from './ProtocolMapperRepresentation';
import {
    ProtocolMapperRepresentationFromJSON,
    ProtocolMapperRepresentationFromJSONTyped,
    ProtocolMapperRepresentationToJSON,
} from './ProtocolMapperRepresentation';
import type { RequiredActionProviderRepresentation } from './RequiredActionProviderRepresentation';
import {
    RequiredActionProviderRepresentationFromJSON,
    RequiredActionProviderRepresentationFromJSONTyped,
    RequiredActionProviderRepresentationToJSON,
} from './RequiredActionProviderRepresentation';
import type { RoleRepresentation } from './RoleRepresentation';
import {
    RoleRepresentationFromJSON,
    RoleRepresentationFromJSONTyped,
    RoleRepresentationToJSON,
} from './RoleRepresentation';
import type { RolesRepresentation } from './RolesRepresentation';
import {
    RolesRepresentationFromJSON,
    RolesRepresentationFromJSONTyped,
    RolesRepresentationToJSON,
} from './RolesRepresentation';
import type { ScopeMappingRepresentation } from './ScopeMappingRepresentation';
import {
    ScopeMappingRepresentationFromJSON,
    ScopeMappingRepresentationFromJSONTyped,
    ScopeMappingRepresentationToJSON,
} from './ScopeMappingRepresentation';
import type { UserFederationMapperRepresentation } from './UserFederationMapperRepresentation';
import {
    UserFederationMapperRepresentationFromJSON,
    UserFederationMapperRepresentationFromJSONTyped,
    UserFederationMapperRepresentationToJSON,
} from './UserFederationMapperRepresentation';
import type { UserFederationProviderRepresentation } from './UserFederationProviderRepresentation';
import {
    UserFederationProviderRepresentationFromJSON,
    UserFederationProviderRepresentationFromJSONTyped,
    UserFederationProviderRepresentationToJSON,
} from './UserFederationProviderRepresentation';
import type { UserRepresentation } from './UserRepresentation';
import {
    UserRepresentationFromJSON,
    UserRepresentationFromJSONTyped,
    UserRepresentationToJSON,
} from './UserRepresentation';

/**
 * 
 * @export
 * @interface RealmRepresentation
 */
export interface RealmRepresentation {
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    realm?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    displayNameHtml?: string;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    notBefore?: number;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    defaultSignatureAlgorithm?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    revokeRefreshToken?: boolean;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    refreshTokenMaxReuse?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    accessTokenLifespan?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    accessTokenLifespanForImplicitFlow?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    ssoSessionIdleTimeout?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    ssoSessionMaxLifespan?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    ssoSessionIdleTimeoutRememberMe?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    ssoSessionMaxLifespanRememberMe?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    offlineSessionIdleTimeout?: number;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    offlineSessionMaxLifespanEnabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    offlineSessionMaxLifespan?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    clientSessionIdleTimeout?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    clientSessionMaxLifespan?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    clientOfflineSessionIdleTimeout?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    clientOfflineSessionMaxLifespan?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    accessCodeLifespan?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    accessCodeLifespanUserAction?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    accessCodeLifespanLogin?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    actionTokenGeneratedByAdminLifespan?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    actionTokenGeneratedByUserLifespan?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    oauth2DeviceCodeLifespan?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    oauth2DevicePollingInterval?: number;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    enabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    sslRequired?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     * @deprecated
     */
    passwordCredentialGrantAllowed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    registrationAllowed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    registrationEmailAsUsername?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    rememberMe?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    verifyEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    loginWithEmailAllowed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    duplicateEmailsAllowed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    resetPasswordAllowed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    editUsernameAllowed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     * @deprecated
     */
    userCacheEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     * @deprecated
     */
    realmCacheEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    bruteForceProtected?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    permanentLockout?: boolean;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    maxTemporaryLockouts?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    maxFailureWaitSeconds?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    minimumQuickLoginWaitSeconds?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    waitIncrementSeconds?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    quickLoginCheckMilliSeconds?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    maxDeltaTimeSeconds?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    failureFactor?: number;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     * @deprecated
     */
    privateKey?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     * @deprecated
     */
    publicKey?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     * @deprecated
     */
    certificate?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     * @deprecated
     */
    codeSecret?: string;
    /**
     * 
     * @type {RolesRepresentation}
     * @memberof RealmRepresentation
     */
    roles?: RolesRepresentation;
    /**
     * 
     * @type {Array<GroupRepresentation>}
     * @memberof RealmRepresentation
     */
    groups?: Array<GroupRepresentation>;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     * @deprecated
     */
    defaultRoles?: Array<string>;
    /**
     * 
     * @type {RoleRepresentation}
     * @memberof RealmRepresentation
     */
    defaultRole?: RoleRepresentation;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     */
    defaultGroups?: Array<string>;
    /**
     * 
     * @type {Set<string>}
     * @memberof RealmRepresentation
     * @deprecated
     */
    requiredCredentials?: Set<string>;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    passwordPolicy?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    otpPolicyType?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    otpPolicyAlgorithm?: string;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    otpPolicyInitialCounter?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    otpPolicyDigits?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    otpPolicyLookAheadWindow?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    otpPolicyPeriod?: number;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    otpPolicyCodeReusable?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     */
    otpSupportedApplications?: Array<string>;
    /**
     * 
     * @type {{ [key: string]: { [key: string]: string; }; }}
     * @memberof RealmRepresentation
     */
    localizationTexts?: { [key: string]: { [key: string]: string; }; };
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyRpEntityName?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     */
    webAuthnPolicySignatureAlgorithms?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyRpId?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyAttestationConveyancePreference?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyAuthenticatorAttachment?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyRequireResidentKey?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyUserVerificationRequirement?: string;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyCreateTimeout?: number;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyAvoidSameAuthenticatorRegister?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyAcceptableAaguids?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyExtraOrigins?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyPasswordlessRpEntityName?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyPasswordlessSignatureAlgorithms?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyPasswordlessRpId?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyPasswordlessAttestationConveyancePreference?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyPasswordlessAuthenticatorAttachment?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyPasswordlessRequireResidentKey?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyPasswordlessUserVerificationRequirement?: string;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyPasswordlessCreateTimeout?: number;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyPasswordlessAcceptableAaguids?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     */
    webAuthnPolicyPasswordlessExtraOrigins?: Array<string>;
    /**
     * 
     * @type {ClientProfilesRepresentation}
     * @memberof RealmRepresentation
     */
    clientProfiles?: ClientProfilesRepresentation;
    /**
     * 
     * @type {ClientPoliciesRepresentation}
     * @memberof RealmRepresentation
     */
    clientPolicies?: ClientPoliciesRepresentation;
    /**
     * 
     * @type {Array<UserRepresentation>}
     * @memberof RealmRepresentation
     */
    users?: Array<UserRepresentation>;
    /**
     * 
     * @type {Array<UserRepresentation>}
     * @memberof RealmRepresentation
     */
    federatedUsers?: Array<UserRepresentation>;
    /**
     * 
     * @type {Array<ScopeMappingRepresentation>}
     * @memberof RealmRepresentation
     */
    scopeMappings?: Array<ScopeMappingRepresentation>;
    /**
     * 
     * @type {{ [key: string]: Array<ScopeMappingRepresentation>; }}
     * @memberof RealmRepresentation
     */
    clientScopeMappings?: { [key: string]: Array<ScopeMappingRepresentation>; };
    /**
     * 
     * @type {Array<ClientRepresentation>}
     * @memberof RealmRepresentation
     */
    clients?: Array<ClientRepresentation>;
    /**
     * 
     * @type {Array<ClientScopeRepresentation>}
     * @memberof RealmRepresentation
     */
    clientScopes?: Array<ClientScopeRepresentation>;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     */
    defaultDefaultClientScopes?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     */
    defaultOptionalClientScopes?: Array<string>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof RealmRepresentation
     */
    browserSecurityHeaders?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof RealmRepresentation
     */
    smtpServer?: { [key: string]: string; };
    /**
     * 
     * @type {Array<UserFederationProviderRepresentation>}
     * @memberof RealmRepresentation
     */
    userFederationProviders?: Array<UserFederationProviderRepresentation>;
    /**
     * 
     * @type {Array<UserFederationMapperRepresentation>}
     * @memberof RealmRepresentation
     */
    userFederationMappers?: Array<UserFederationMapperRepresentation>;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    loginTheme?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    accountTheme?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    adminTheme?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    emailTheme?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    eventsEnabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    eventsExpiration?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     */
    eventsListeners?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof RealmRepresentation
     */
    enabledEventTypes?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    adminEventsEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    adminEventsDetailsEnabled?: boolean;
    /**
     * 
     * @type {Array<IdentityProviderRepresentation>}
     * @memberof RealmRepresentation
     */
    identityProviders?: Array<IdentityProviderRepresentation>;
    /**
     * 
     * @type {Array<IdentityProviderMapperRepresentation>}
     * @memberof RealmRepresentation
     */
    identityProviderMappers?: Array<IdentityProviderMapperRepresentation>;
    /**
     * 
     * @type {Array<ProtocolMapperRepresentation>}
     * @memberof RealmRepresentation
     */
    protocolMappers?: Array<ProtocolMapperRepresentation>;
    /**
     * 
     * @type {{ [key: string]: Array<any>; }}
     * @memberof RealmRepresentation
     */
    components?: { [key: string]: Array<any>; };
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    internationalizationEnabled?: boolean;
    /**
     * 
     * @type {Set<string>}
     * @memberof RealmRepresentation
     */
    supportedLocales?: Set<string>;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    defaultLocale?: string;
    /**
     * 
     * @type {Array<AuthenticationFlowRepresentation>}
     * @memberof RealmRepresentation
     */
    authenticationFlows?: Array<AuthenticationFlowRepresentation>;
    /**
     * 
     * @type {Array<AuthenticatorConfigRepresentation>}
     * @memberof RealmRepresentation
     */
    authenticatorConfig?: Array<AuthenticatorConfigRepresentation>;
    /**
     * 
     * @type {Array<RequiredActionProviderRepresentation>}
     * @memberof RealmRepresentation
     */
    requiredActions?: Array<RequiredActionProviderRepresentation>;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    browserFlow?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    registrationFlow?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    directGrantFlow?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    resetCredentialsFlow?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    clientAuthenticationFlow?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    dockerAuthenticationFlow?: string;
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    firstBrokerLoginFlow?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof RealmRepresentation
     */
    attributes?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof RealmRepresentation
     */
    keycloakVersion?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     */
    userManagedAccessAllowed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     * @deprecated
     */
    social?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RealmRepresentation
     * @deprecated
     */
    updateProfileOnInitialSocialLogin?: boolean;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof RealmRepresentation
     * @deprecated
     */
    socialProviders?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: Array<ScopeMappingRepresentation>; }}
     * @memberof RealmRepresentation
     * @deprecated
     */
    applicationScopeMappings?: { [key: string]: Array<ScopeMappingRepresentation>; };
    /**
     * 
     * @type {Array<ApplicationRepresentation>}
     * @memberof RealmRepresentation
     * @deprecated
     */
    applications?: Array<ApplicationRepresentation>;
    /**
     * 
     * @type {Array<OAuthClientRepresentation>}
     * @memberof RealmRepresentation
     * @deprecated
     */
    oauthClients?: Array<OAuthClientRepresentation>;
    /**
     * 
     * @type {Array<ClientTemplateRepresentation>}
     * @memberof RealmRepresentation
     * @deprecated
     */
    clientTemplates?: Array<ClientTemplateRepresentation>;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    oAuth2DeviceCodeLifespan?: number;
    /**
     * 
     * @type {number}
     * @memberof RealmRepresentation
     */
    oAuth2DevicePollingInterval?: number;
}

/**
 * Check if a given object implements the RealmRepresentation interface.
 */
export function instanceOfRealmRepresentation(value: object): boolean {
    return true;
}

export function RealmRepresentationFromJSON(json: any): RealmRepresentation {
    return RealmRepresentationFromJSONTyped(json, false);
}

export function RealmRepresentationFromJSONTyped(json: any, ignoreDiscriminator: boolean): RealmRepresentation {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'realm': json['realm'] == null ? undefined : json['realm'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'displayNameHtml': json['displayNameHtml'] == null ? undefined : json['displayNameHtml'],
        'notBefore': json['notBefore'] == null ? undefined : json['notBefore'],
        'defaultSignatureAlgorithm': json['defaultSignatureAlgorithm'] == null ? undefined : json['defaultSignatureAlgorithm'],
        'revokeRefreshToken': json['revokeRefreshToken'] == null ? undefined : json['revokeRefreshToken'],
        'refreshTokenMaxReuse': json['refreshTokenMaxReuse'] == null ? undefined : json['refreshTokenMaxReuse'],
        'accessTokenLifespan': json['accessTokenLifespan'] == null ? undefined : json['accessTokenLifespan'],
        'accessTokenLifespanForImplicitFlow': json['accessTokenLifespanForImplicitFlow'] == null ? undefined : json['accessTokenLifespanForImplicitFlow'],
        'ssoSessionIdleTimeout': json['ssoSessionIdleTimeout'] == null ? undefined : json['ssoSessionIdleTimeout'],
        'ssoSessionMaxLifespan': json['ssoSessionMaxLifespan'] == null ? undefined : json['ssoSessionMaxLifespan'],
        'ssoSessionIdleTimeoutRememberMe': json['ssoSessionIdleTimeoutRememberMe'] == null ? undefined : json['ssoSessionIdleTimeoutRememberMe'],
        'ssoSessionMaxLifespanRememberMe': json['ssoSessionMaxLifespanRememberMe'] == null ? undefined : json['ssoSessionMaxLifespanRememberMe'],
        'offlineSessionIdleTimeout': json['offlineSessionIdleTimeout'] == null ? undefined : json['offlineSessionIdleTimeout'],
        'offlineSessionMaxLifespanEnabled': json['offlineSessionMaxLifespanEnabled'] == null ? undefined : json['offlineSessionMaxLifespanEnabled'],
        'offlineSessionMaxLifespan': json['offlineSessionMaxLifespan'] == null ? undefined : json['offlineSessionMaxLifespan'],
        'clientSessionIdleTimeout': json['clientSessionIdleTimeout'] == null ? undefined : json['clientSessionIdleTimeout'],
        'clientSessionMaxLifespan': json['clientSessionMaxLifespan'] == null ? undefined : json['clientSessionMaxLifespan'],
        'clientOfflineSessionIdleTimeout': json['clientOfflineSessionIdleTimeout'] == null ? undefined : json['clientOfflineSessionIdleTimeout'],
        'clientOfflineSessionMaxLifespan': json['clientOfflineSessionMaxLifespan'] == null ? undefined : json['clientOfflineSessionMaxLifespan'],
        'accessCodeLifespan': json['accessCodeLifespan'] == null ? undefined : json['accessCodeLifespan'],
        'accessCodeLifespanUserAction': json['accessCodeLifespanUserAction'] == null ? undefined : json['accessCodeLifespanUserAction'],
        'accessCodeLifespanLogin': json['accessCodeLifespanLogin'] == null ? undefined : json['accessCodeLifespanLogin'],
        'actionTokenGeneratedByAdminLifespan': json['actionTokenGeneratedByAdminLifespan'] == null ? undefined : json['actionTokenGeneratedByAdminLifespan'],
        'actionTokenGeneratedByUserLifespan': json['actionTokenGeneratedByUserLifespan'] == null ? undefined : json['actionTokenGeneratedByUserLifespan'],
        'oauth2DeviceCodeLifespan': json['oauth2DeviceCodeLifespan'] == null ? undefined : json['oauth2DeviceCodeLifespan'],
        'oauth2DevicePollingInterval': json['oauth2DevicePollingInterval'] == null ? undefined : json['oauth2DevicePollingInterval'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'sslRequired': json['sslRequired'] == null ? undefined : json['sslRequired'],
        'passwordCredentialGrantAllowed': json['passwordCredentialGrantAllowed'] == null ? undefined : json['passwordCredentialGrantAllowed'],
        'registrationAllowed': json['registrationAllowed'] == null ? undefined : json['registrationAllowed'],
        'registrationEmailAsUsername': json['registrationEmailAsUsername'] == null ? undefined : json['registrationEmailAsUsername'],
        'rememberMe': json['rememberMe'] == null ? undefined : json['rememberMe'],
        'verifyEmail': json['verifyEmail'] == null ? undefined : json['verifyEmail'],
        'loginWithEmailAllowed': json['loginWithEmailAllowed'] == null ? undefined : json['loginWithEmailAllowed'],
        'duplicateEmailsAllowed': json['duplicateEmailsAllowed'] == null ? undefined : json['duplicateEmailsAllowed'],
        'resetPasswordAllowed': json['resetPasswordAllowed'] == null ? undefined : json['resetPasswordAllowed'],
        'editUsernameAllowed': json['editUsernameAllowed'] == null ? undefined : json['editUsernameAllowed'],
        'userCacheEnabled': json['userCacheEnabled'] == null ? undefined : json['userCacheEnabled'],
        'realmCacheEnabled': json['realmCacheEnabled'] == null ? undefined : json['realmCacheEnabled'],
        'bruteForceProtected': json['bruteForceProtected'] == null ? undefined : json['bruteForceProtected'],
        'permanentLockout': json['permanentLockout'] == null ? undefined : json['permanentLockout'],
        'maxTemporaryLockouts': json['maxTemporaryLockouts'] == null ? undefined : json['maxTemporaryLockouts'],
        'maxFailureWaitSeconds': json['maxFailureWaitSeconds'] == null ? undefined : json['maxFailureWaitSeconds'],
        'minimumQuickLoginWaitSeconds': json['minimumQuickLoginWaitSeconds'] == null ? undefined : json['minimumQuickLoginWaitSeconds'],
        'waitIncrementSeconds': json['waitIncrementSeconds'] == null ? undefined : json['waitIncrementSeconds'],
        'quickLoginCheckMilliSeconds': json['quickLoginCheckMilliSeconds'] == null ? undefined : json['quickLoginCheckMilliSeconds'],
        'maxDeltaTimeSeconds': json['maxDeltaTimeSeconds'] == null ? undefined : json['maxDeltaTimeSeconds'],
        'failureFactor': json['failureFactor'] == null ? undefined : json['failureFactor'],
        'privateKey': json['privateKey'] == null ? undefined : json['privateKey'],
        'publicKey': json['publicKey'] == null ? undefined : json['publicKey'],
        'certificate': json['certificate'] == null ? undefined : json['certificate'],
        'codeSecret': json['codeSecret'] == null ? undefined : json['codeSecret'],
        'roles': json['roles'] == null ? undefined : RolesRepresentationFromJSON(json['roles']),
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(GroupRepresentationFromJSON)),
        'defaultRoles': json['defaultRoles'] == null ? undefined : json['defaultRoles'],
        'defaultRole': json['defaultRole'] == null ? undefined : RoleRepresentationFromJSON(json['defaultRole']),
        'defaultGroups': json['defaultGroups'] == null ? undefined : json['defaultGroups'],
        'requiredCredentials': json['requiredCredentials'] == null ? undefined : json['requiredCredentials'],
        'passwordPolicy': json['passwordPolicy'] == null ? undefined : json['passwordPolicy'],
        'otpPolicyType': json['otpPolicyType'] == null ? undefined : json['otpPolicyType'],
        'otpPolicyAlgorithm': json['otpPolicyAlgorithm'] == null ? undefined : json['otpPolicyAlgorithm'],
        'otpPolicyInitialCounter': json['otpPolicyInitialCounter'] == null ? undefined : json['otpPolicyInitialCounter'],
        'otpPolicyDigits': json['otpPolicyDigits'] == null ? undefined : json['otpPolicyDigits'],
        'otpPolicyLookAheadWindow': json['otpPolicyLookAheadWindow'] == null ? undefined : json['otpPolicyLookAheadWindow'],
        'otpPolicyPeriod': json['otpPolicyPeriod'] == null ? undefined : json['otpPolicyPeriod'],
        'otpPolicyCodeReusable': json['otpPolicyCodeReusable'] == null ? undefined : json['otpPolicyCodeReusable'],
        'otpSupportedApplications': json['otpSupportedApplications'] == null ? undefined : json['otpSupportedApplications'],
        'localizationTexts': json['localizationTexts'] == null ? undefined : json['localizationTexts'],
        'webAuthnPolicyRpEntityName': json['webAuthnPolicyRpEntityName'] == null ? undefined : json['webAuthnPolicyRpEntityName'],
        'webAuthnPolicySignatureAlgorithms': json['webAuthnPolicySignatureAlgorithms'] == null ? undefined : json['webAuthnPolicySignatureAlgorithms'],
        'webAuthnPolicyRpId': json['webAuthnPolicyRpId'] == null ? undefined : json['webAuthnPolicyRpId'],
        'webAuthnPolicyAttestationConveyancePreference': json['webAuthnPolicyAttestationConveyancePreference'] == null ? undefined : json['webAuthnPolicyAttestationConveyancePreference'],
        'webAuthnPolicyAuthenticatorAttachment': json['webAuthnPolicyAuthenticatorAttachment'] == null ? undefined : json['webAuthnPolicyAuthenticatorAttachment'],
        'webAuthnPolicyRequireResidentKey': json['webAuthnPolicyRequireResidentKey'] == null ? undefined : json['webAuthnPolicyRequireResidentKey'],
        'webAuthnPolicyUserVerificationRequirement': json['webAuthnPolicyUserVerificationRequirement'] == null ? undefined : json['webAuthnPolicyUserVerificationRequirement'],
        'webAuthnPolicyCreateTimeout': json['webAuthnPolicyCreateTimeout'] == null ? undefined : json['webAuthnPolicyCreateTimeout'],
        'webAuthnPolicyAvoidSameAuthenticatorRegister': json['webAuthnPolicyAvoidSameAuthenticatorRegister'] == null ? undefined : json['webAuthnPolicyAvoidSameAuthenticatorRegister'],
        'webAuthnPolicyAcceptableAaguids': json['webAuthnPolicyAcceptableAaguids'] == null ? undefined : json['webAuthnPolicyAcceptableAaguids'],
        'webAuthnPolicyExtraOrigins': json['webAuthnPolicyExtraOrigins'] == null ? undefined : json['webAuthnPolicyExtraOrigins'],
        'webAuthnPolicyPasswordlessRpEntityName': json['webAuthnPolicyPasswordlessRpEntityName'] == null ? undefined : json['webAuthnPolicyPasswordlessRpEntityName'],
        'webAuthnPolicyPasswordlessSignatureAlgorithms': json['webAuthnPolicyPasswordlessSignatureAlgorithms'] == null ? undefined : json['webAuthnPolicyPasswordlessSignatureAlgorithms'],
        'webAuthnPolicyPasswordlessRpId': json['webAuthnPolicyPasswordlessRpId'] == null ? undefined : json['webAuthnPolicyPasswordlessRpId'],
        'webAuthnPolicyPasswordlessAttestationConveyancePreference': json['webAuthnPolicyPasswordlessAttestationConveyancePreference'] == null ? undefined : json['webAuthnPolicyPasswordlessAttestationConveyancePreference'],
        'webAuthnPolicyPasswordlessAuthenticatorAttachment': json['webAuthnPolicyPasswordlessAuthenticatorAttachment'] == null ? undefined : json['webAuthnPolicyPasswordlessAuthenticatorAttachment'],
        'webAuthnPolicyPasswordlessRequireResidentKey': json['webAuthnPolicyPasswordlessRequireResidentKey'] == null ? undefined : json['webAuthnPolicyPasswordlessRequireResidentKey'],
        'webAuthnPolicyPasswordlessUserVerificationRequirement': json['webAuthnPolicyPasswordlessUserVerificationRequirement'] == null ? undefined : json['webAuthnPolicyPasswordlessUserVerificationRequirement'],
        'webAuthnPolicyPasswordlessCreateTimeout': json['webAuthnPolicyPasswordlessCreateTimeout'] == null ? undefined : json['webAuthnPolicyPasswordlessCreateTimeout'],
        'webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister': json['webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister'] == null ? undefined : json['webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister'],
        'webAuthnPolicyPasswordlessAcceptableAaguids': json['webAuthnPolicyPasswordlessAcceptableAaguids'] == null ? undefined : json['webAuthnPolicyPasswordlessAcceptableAaguids'],
        'webAuthnPolicyPasswordlessExtraOrigins': json['webAuthnPolicyPasswordlessExtraOrigins'] == null ? undefined : json['webAuthnPolicyPasswordlessExtraOrigins'],
        'clientProfiles': json['clientProfiles'] == null ? undefined : ClientProfilesRepresentationFromJSON(json['clientProfiles']),
        'clientPolicies': json['clientPolicies'] == null ? undefined : ClientPoliciesRepresentationFromJSON(json['clientPolicies']),
        'users': json['users'] == null ? undefined : ((json['users'] as Array<any>).map(UserRepresentationFromJSON)),
        'federatedUsers': json['federatedUsers'] == null ? undefined : ((json['federatedUsers'] as Array<any>).map(UserRepresentationFromJSON)),
        'scopeMappings': json['scopeMappings'] == null ? undefined : ((json['scopeMappings'] as Array<any>).map(ScopeMappingRepresentationFromJSON)),
        'clientScopeMappings': json['clientScopeMappings'] == null ? undefined : json['clientScopeMappings'],
        'clients': json['clients'] == null ? undefined : ((json['clients'] as Array<any>).map(ClientRepresentationFromJSON)),
        'clientScopes': json['clientScopes'] == null ? undefined : ((json['clientScopes'] as Array<any>).map(ClientScopeRepresentationFromJSON)),
        'defaultDefaultClientScopes': json['defaultDefaultClientScopes'] == null ? undefined : json['defaultDefaultClientScopes'],
        'defaultOptionalClientScopes': json['defaultOptionalClientScopes'] == null ? undefined : json['defaultOptionalClientScopes'],
        'browserSecurityHeaders': json['browserSecurityHeaders'] == null ? undefined : json['browserSecurityHeaders'],
        'smtpServer': json['smtpServer'] == null ? undefined : json['smtpServer'],
        'userFederationProviders': json['userFederationProviders'] == null ? undefined : ((json['userFederationProviders'] as Array<any>).map(UserFederationProviderRepresentationFromJSON)),
        'userFederationMappers': json['userFederationMappers'] == null ? undefined : ((json['userFederationMappers'] as Array<any>).map(UserFederationMapperRepresentationFromJSON)),
        'loginTheme': json['loginTheme'] == null ? undefined : json['loginTheme'],
        'accountTheme': json['accountTheme'] == null ? undefined : json['accountTheme'],
        'adminTheme': json['adminTheme'] == null ? undefined : json['adminTheme'],
        'emailTheme': json['emailTheme'] == null ? undefined : json['emailTheme'],
        'eventsEnabled': json['eventsEnabled'] == null ? undefined : json['eventsEnabled'],
        'eventsExpiration': json['eventsExpiration'] == null ? undefined : json['eventsExpiration'],
        'eventsListeners': json['eventsListeners'] == null ? undefined : json['eventsListeners'],
        'enabledEventTypes': json['enabledEventTypes'] == null ? undefined : json['enabledEventTypes'],
        'adminEventsEnabled': json['adminEventsEnabled'] == null ? undefined : json['adminEventsEnabled'],
        'adminEventsDetailsEnabled': json['adminEventsDetailsEnabled'] == null ? undefined : json['adminEventsDetailsEnabled'],
        'identityProviders': json['identityProviders'] == null ? undefined : ((json['identityProviders'] as Array<any>).map(IdentityProviderRepresentationFromJSON)),
        'identityProviderMappers': json['identityProviderMappers'] == null ? undefined : ((json['identityProviderMappers'] as Array<any>).map(IdentityProviderMapperRepresentationFromJSON)),
        'protocolMappers': json['protocolMappers'] == null ? undefined : ((json['protocolMappers'] as Array<any>).map(ProtocolMapperRepresentationFromJSON)),
        'components': json['components'] == null ? undefined : json['components'],
        'internationalizationEnabled': json['internationalizationEnabled'] == null ? undefined : json['internationalizationEnabled'],
        'supportedLocales': json['supportedLocales'] == null ? undefined : json['supportedLocales'],
        'defaultLocale': json['defaultLocale'] == null ? undefined : json['defaultLocale'],
        'authenticationFlows': json['authenticationFlows'] == null ? undefined : ((json['authenticationFlows'] as Array<any>).map(AuthenticationFlowRepresentationFromJSON)),
        'authenticatorConfig': json['authenticatorConfig'] == null ? undefined : ((json['authenticatorConfig'] as Array<any>).map(AuthenticatorConfigRepresentationFromJSON)),
        'requiredActions': json['requiredActions'] == null ? undefined : ((json['requiredActions'] as Array<any>).map(RequiredActionProviderRepresentationFromJSON)),
        'browserFlow': json['browserFlow'] == null ? undefined : json['browserFlow'],
        'registrationFlow': json['registrationFlow'] == null ? undefined : json['registrationFlow'],
        'directGrantFlow': json['directGrantFlow'] == null ? undefined : json['directGrantFlow'],
        'resetCredentialsFlow': json['resetCredentialsFlow'] == null ? undefined : json['resetCredentialsFlow'],
        'clientAuthenticationFlow': json['clientAuthenticationFlow'] == null ? undefined : json['clientAuthenticationFlow'],
        'dockerAuthenticationFlow': json['dockerAuthenticationFlow'] == null ? undefined : json['dockerAuthenticationFlow'],
        'firstBrokerLoginFlow': json['firstBrokerLoginFlow'] == null ? undefined : json['firstBrokerLoginFlow'],
        'attributes': json['attributes'] == null ? undefined : json['attributes'],
        'keycloakVersion': json['keycloakVersion'] == null ? undefined : json['keycloakVersion'],
        'userManagedAccessAllowed': json['userManagedAccessAllowed'] == null ? undefined : json['userManagedAccessAllowed'],
        'social': json['social'] == null ? undefined : json['social'],
        'updateProfileOnInitialSocialLogin': json['updateProfileOnInitialSocialLogin'] == null ? undefined : json['updateProfileOnInitialSocialLogin'],
        'socialProviders': json['socialProviders'] == null ? undefined : json['socialProviders'],
        'applicationScopeMappings': json['applicationScopeMappings'] == null ? undefined : json['applicationScopeMappings'],
        'applications': json['applications'] == null ? undefined : ((json['applications'] as Array<any>).map(ApplicationRepresentationFromJSON)),
        'oauthClients': json['oauthClients'] == null ? undefined : ((json['oauthClients'] as Array<any>).map(OAuthClientRepresentationFromJSON)),
        'clientTemplates': json['clientTemplates'] == null ? undefined : ((json['clientTemplates'] as Array<any>).map(ClientTemplateRepresentationFromJSON)),
        'oAuth2DeviceCodeLifespan': json['oAuth2DeviceCodeLifespan'] == null ? undefined : json['oAuth2DeviceCodeLifespan'],
        'oAuth2DevicePollingInterval': json['oAuth2DevicePollingInterval'] == null ? undefined : json['oAuth2DevicePollingInterval'],
    };
}

export function RealmRepresentationToJSON(value?: RealmRepresentation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'realm': value['realm'],
        'displayName': value['displayName'],
        'displayNameHtml': value['displayNameHtml'],
        'notBefore': value['notBefore'],
        'defaultSignatureAlgorithm': value['defaultSignatureAlgorithm'],
        'revokeRefreshToken': value['revokeRefreshToken'],
        'refreshTokenMaxReuse': value['refreshTokenMaxReuse'],
        'accessTokenLifespan': value['accessTokenLifespan'],
        'accessTokenLifespanForImplicitFlow': value['accessTokenLifespanForImplicitFlow'],
        'ssoSessionIdleTimeout': value['ssoSessionIdleTimeout'],
        'ssoSessionMaxLifespan': value['ssoSessionMaxLifespan'],
        'ssoSessionIdleTimeoutRememberMe': value['ssoSessionIdleTimeoutRememberMe'],
        'ssoSessionMaxLifespanRememberMe': value['ssoSessionMaxLifespanRememberMe'],
        'offlineSessionIdleTimeout': value['offlineSessionIdleTimeout'],
        'offlineSessionMaxLifespanEnabled': value['offlineSessionMaxLifespanEnabled'],
        'offlineSessionMaxLifespan': value['offlineSessionMaxLifespan'],
        'clientSessionIdleTimeout': value['clientSessionIdleTimeout'],
        'clientSessionMaxLifespan': value['clientSessionMaxLifespan'],
        'clientOfflineSessionIdleTimeout': value['clientOfflineSessionIdleTimeout'],
        'clientOfflineSessionMaxLifespan': value['clientOfflineSessionMaxLifespan'],
        'accessCodeLifespan': value['accessCodeLifespan'],
        'accessCodeLifespanUserAction': value['accessCodeLifespanUserAction'],
        'accessCodeLifespanLogin': value['accessCodeLifespanLogin'],
        'actionTokenGeneratedByAdminLifespan': value['actionTokenGeneratedByAdminLifespan'],
        'actionTokenGeneratedByUserLifespan': value['actionTokenGeneratedByUserLifespan'],
        'oauth2DeviceCodeLifespan': value['oauth2DeviceCodeLifespan'],
        'oauth2DevicePollingInterval': value['oauth2DevicePollingInterval'],
        'enabled': value['enabled'],
        'sslRequired': value['sslRequired'],
        'passwordCredentialGrantAllowed': value['passwordCredentialGrantAllowed'],
        'registrationAllowed': value['registrationAllowed'],
        'registrationEmailAsUsername': value['registrationEmailAsUsername'],
        'rememberMe': value['rememberMe'],
        'verifyEmail': value['verifyEmail'],
        'loginWithEmailAllowed': value['loginWithEmailAllowed'],
        'duplicateEmailsAllowed': value['duplicateEmailsAllowed'],
        'resetPasswordAllowed': value['resetPasswordAllowed'],
        'editUsernameAllowed': value['editUsernameAllowed'],
        'userCacheEnabled': value['userCacheEnabled'],
        'realmCacheEnabled': value['realmCacheEnabled'],
        'bruteForceProtected': value['bruteForceProtected'],
        'permanentLockout': value['permanentLockout'],
        'maxTemporaryLockouts': value['maxTemporaryLockouts'],
        'maxFailureWaitSeconds': value['maxFailureWaitSeconds'],
        'minimumQuickLoginWaitSeconds': value['minimumQuickLoginWaitSeconds'],
        'waitIncrementSeconds': value['waitIncrementSeconds'],
        'quickLoginCheckMilliSeconds': value['quickLoginCheckMilliSeconds'],
        'maxDeltaTimeSeconds': value['maxDeltaTimeSeconds'],
        'failureFactor': value['failureFactor'],
        'privateKey': value['privateKey'],
        'publicKey': value['publicKey'],
        'certificate': value['certificate'],
        'codeSecret': value['codeSecret'],
        'roles': RolesRepresentationToJSON(value['roles']),
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(GroupRepresentationToJSON)),
        'defaultRoles': value['defaultRoles'],
        'defaultRole': RoleRepresentationToJSON(value['defaultRole']),
        'defaultGroups': value['defaultGroups'],
        'requiredCredentials': value['requiredCredentials'] == null ? undefined : Array.from(value['requiredCredentials'] as Set<any>),
        'passwordPolicy': value['passwordPolicy'],
        'otpPolicyType': value['otpPolicyType'],
        'otpPolicyAlgorithm': value['otpPolicyAlgorithm'],
        'otpPolicyInitialCounter': value['otpPolicyInitialCounter'],
        'otpPolicyDigits': value['otpPolicyDigits'],
        'otpPolicyLookAheadWindow': value['otpPolicyLookAheadWindow'],
        'otpPolicyPeriod': value['otpPolicyPeriod'],
        'otpPolicyCodeReusable': value['otpPolicyCodeReusable'],
        'otpSupportedApplications': value['otpSupportedApplications'],
        'localizationTexts': value['localizationTexts'],
        'webAuthnPolicyRpEntityName': value['webAuthnPolicyRpEntityName'],
        'webAuthnPolicySignatureAlgorithms': value['webAuthnPolicySignatureAlgorithms'],
        'webAuthnPolicyRpId': value['webAuthnPolicyRpId'],
        'webAuthnPolicyAttestationConveyancePreference': value['webAuthnPolicyAttestationConveyancePreference'],
        'webAuthnPolicyAuthenticatorAttachment': value['webAuthnPolicyAuthenticatorAttachment'],
        'webAuthnPolicyRequireResidentKey': value['webAuthnPolicyRequireResidentKey'],
        'webAuthnPolicyUserVerificationRequirement': value['webAuthnPolicyUserVerificationRequirement'],
        'webAuthnPolicyCreateTimeout': value['webAuthnPolicyCreateTimeout'],
        'webAuthnPolicyAvoidSameAuthenticatorRegister': value['webAuthnPolicyAvoidSameAuthenticatorRegister'],
        'webAuthnPolicyAcceptableAaguids': value['webAuthnPolicyAcceptableAaguids'],
        'webAuthnPolicyExtraOrigins': value['webAuthnPolicyExtraOrigins'],
        'webAuthnPolicyPasswordlessRpEntityName': value['webAuthnPolicyPasswordlessRpEntityName'],
        'webAuthnPolicyPasswordlessSignatureAlgorithms': value['webAuthnPolicyPasswordlessSignatureAlgorithms'],
        'webAuthnPolicyPasswordlessRpId': value['webAuthnPolicyPasswordlessRpId'],
        'webAuthnPolicyPasswordlessAttestationConveyancePreference': value['webAuthnPolicyPasswordlessAttestationConveyancePreference'],
        'webAuthnPolicyPasswordlessAuthenticatorAttachment': value['webAuthnPolicyPasswordlessAuthenticatorAttachment'],
        'webAuthnPolicyPasswordlessRequireResidentKey': value['webAuthnPolicyPasswordlessRequireResidentKey'],
        'webAuthnPolicyPasswordlessUserVerificationRequirement': value['webAuthnPolicyPasswordlessUserVerificationRequirement'],
        'webAuthnPolicyPasswordlessCreateTimeout': value['webAuthnPolicyPasswordlessCreateTimeout'],
        'webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister': value['webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister'],
        'webAuthnPolicyPasswordlessAcceptableAaguids': value['webAuthnPolicyPasswordlessAcceptableAaguids'],
        'webAuthnPolicyPasswordlessExtraOrigins': value['webAuthnPolicyPasswordlessExtraOrigins'],
        'clientProfiles': ClientProfilesRepresentationToJSON(value['clientProfiles']),
        'clientPolicies': ClientPoliciesRepresentationToJSON(value['clientPolicies']),
        'users': value['users'] == null ? undefined : ((value['users'] as Array<any>).map(UserRepresentationToJSON)),
        'federatedUsers': value['federatedUsers'] == null ? undefined : ((value['federatedUsers'] as Array<any>).map(UserRepresentationToJSON)),
        'scopeMappings': value['scopeMappings'] == null ? undefined : ((value['scopeMappings'] as Array<any>).map(ScopeMappingRepresentationToJSON)),
        'clientScopeMappings': value['clientScopeMappings'],
        'clients': value['clients'] == null ? undefined : ((value['clients'] as Array<any>).map(ClientRepresentationToJSON)),
        'clientScopes': value['clientScopes'] == null ? undefined : ((value['clientScopes'] as Array<any>).map(ClientScopeRepresentationToJSON)),
        'defaultDefaultClientScopes': value['defaultDefaultClientScopes'],
        'defaultOptionalClientScopes': value['defaultOptionalClientScopes'],
        'browserSecurityHeaders': value['browserSecurityHeaders'],
        'smtpServer': value['smtpServer'],
        'userFederationProviders': value['userFederationProviders'] == null ? undefined : ((value['userFederationProviders'] as Array<any>).map(UserFederationProviderRepresentationToJSON)),
        'userFederationMappers': value['userFederationMappers'] == null ? undefined : ((value['userFederationMappers'] as Array<any>).map(UserFederationMapperRepresentationToJSON)),
        'loginTheme': value['loginTheme'],
        'accountTheme': value['accountTheme'],
        'adminTheme': value['adminTheme'],
        'emailTheme': value['emailTheme'],
        'eventsEnabled': value['eventsEnabled'],
        'eventsExpiration': value['eventsExpiration'],
        'eventsListeners': value['eventsListeners'],
        'enabledEventTypes': value['enabledEventTypes'],
        'adminEventsEnabled': value['adminEventsEnabled'],
        'adminEventsDetailsEnabled': value['adminEventsDetailsEnabled'],
        'identityProviders': value['identityProviders'] == null ? undefined : ((value['identityProviders'] as Array<any>).map(IdentityProviderRepresentationToJSON)),
        'identityProviderMappers': value['identityProviderMappers'] == null ? undefined : ((value['identityProviderMappers'] as Array<any>).map(IdentityProviderMapperRepresentationToJSON)),
        'protocolMappers': value['protocolMappers'] == null ? undefined : ((value['protocolMappers'] as Array<any>).map(ProtocolMapperRepresentationToJSON)),
        'components': value['components'],
        'internationalizationEnabled': value['internationalizationEnabled'],
        'supportedLocales': value['supportedLocales'] == null ? undefined : Array.from(value['supportedLocales'] as Set<any>),
        'defaultLocale': value['defaultLocale'],
        'authenticationFlows': value['authenticationFlows'] == null ? undefined : ((value['authenticationFlows'] as Array<any>).map(AuthenticationFlowRepresentationToJSON)),
        'authenticatorConfig': value['authenticatorConfig'] == null ? undefined : ((value['authenticatorConfig'] as Array<any>).map(AuthenticatorConfigRepresentationToJSON)),
        'requiredActions': value['requiredActions'] == null ? undefined : ((value['requiredActions'] as Array<any>).map(RequiredActionProviderRepresentationToJSON)),
        'browserFlow': value['browserFlow'],
        'registrationFlow': value['registrationFlow'],
        'directGrantFlow': value['directGrantFlow'],
        'resetCredentialsFlow': value['resetCredentialsFlow'],
        'clientAuthenticationFlow': value['clientAuthenticationFlow'],
        'dockerAuthenticationFlow': value['dockerAuthenticationFlow'],
        'firstBrokerLoginFlow': value['firstBrokerLoginFlow'],
        'attributes': value['attributes'],
        'keycloakVersion': value['keycloakVersion'],
        'userManagedAccessAllowed': value['userManagedAccessAllowed'],
        'social': value['social'],
        'updateProfileOnInitialSocialLogin': value['updateProfileOnInitialSocialLogin'],
        'socialProviders': value['socialProviders'],
        'applicationScopeMappings': value['applicationScopeMappings'],
        'applications': value['applications'] == null ? undefined : ((value['applications'] as Array<any>).map(ApplicationRepresentationToJSON)),
        'oauthClients': value['oauthClients'] == null ? undefined : ((value['oauthClients'] as Array<any>).map(OAuthClientRepresentationToJSON)),
        'clientTemplates': value['clientTemplates'] == null ? undefined : ((value['clientTemplates'] as Array<any>).map(ClientTemplateRepresentationToJSON)),
        'oAuth2DeviceCodeLifespan': value['oAuth2DeviceCodeLifespan'],
        'oAuth2DevicePollingInterval': value['oAuth2DevicePollingInterval'],
    };
}

