/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserProfileAttributeGroupMetadata } from './UserProfileAttributeGroupMetadata';
import {
    UserProfileAttributeGroupMetadataFromJSON,
    UserProfileAttributeGroupMetadataFromJSONTyped,
    UserProfileAttributeGroupMetadataToJSON,
} from './UserProfileAttributeGroupMetadata';
import type { UserProfileAttributeMetadata } from './UserProfileAttributeMetadata';
import {
    UserProfileAttributeMetadataFromJSON,
    UserProfileAttributeMetadataFromJSONTyped,
    UserProfileAttributeMetadataToJSON,
} from './UserProfileAttributeMetadata';

/**
 * 
 * @export
 * @interface UserProfileMetadata
 */
export interface UserProfileMetadata {
    /**
     * 
     * @type {Array<UserProfileAttributeMetadata>}
     * @memberof UserProfileMetadata
     */
    attributes?: Array<UserProfileAttributeMetadata>;
    /**
     * 
     * @type {Array<UserProfileAttributeGroupMetadata>}
     * @memberof UserProfileMetadata
     */
    groups?: Array<UserProfileAttributeGroupMetadata>;
}

/**
 * Check if a given object implements the UserProfileMetadata interface.
 */
export function instanceOfUserProfileMetadata(value: object): boolean {
    return true;
}

export function UserProfileMetadataFromJSON(json: any): UserProfileMetadata {
    return UserProfileMetadataFromJSONTyped(json, false);
}

export function UserProfileMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfileMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'attributes': json['attributes'] == null ? undefined : ((json['attributes'] as Array<any>).map(UserProfileAttributeMetadataFromJSON)),
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(UserProfileAttributeGroupMetadataFromJSON)),
    };
}

export function UserProfileMetadataToJSON(value?: UserProfileMetadata | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attributes': value['attributes'] == null ? undefined : ((value['attributes'] as Array<any>).map(UserProfileAttributeMetadataToJSON)),
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(UserProfileAttributeGroupMetadataToJSON)),
    };
}

