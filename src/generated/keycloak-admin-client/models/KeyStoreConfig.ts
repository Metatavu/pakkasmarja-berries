/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KeyStoreConfig
 */
export interface KeyStoreConfig {
    /**
     * 
     * @type {boolean}
     * @memberof KeyStoreConfig
     */
    realmCertificate?: boolean;
    /**
     * 
     * @type {string}
     * @memberof KeyStoreConfig
     */
    storePassword?: string;
    /**
     * 
     * @type {string}
     * @memberof KeyStoreConfig
     */
    keyPassword?: string;
    /**
     * 
     * @type {string}
     * @memberof KeyStoreConfig
     */
    keyAlias?: string;
    /**
     * 
     * @type {string}
     * @memberof KeyStoreConfig
     */
    realmAlias?: string;
    /**
     * 
     * @type {string}
     * @memberof KeyStoreConfig
     */
    format?: string;
}

/**
 * Check if a given object implements the KeyStoreConfig interface.
 */
export function instanceOfKeyStoreConfig(value: object): boolean {
    return true;
}

export function KeyStoreConfigFromJSON(json: any): KeyStoreConfig {
    return KeyStoreConfigFromJSONTyped(json, false);
}

export function KeyStoreConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyStoreConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'realmCertificate': json['realmCertificate'] == null ? undefined : json['realmCertificate'],
        'storePassword': json['storePassword'] == null ? undefined : json['storePassword'],
        'keyPassword': json['keyPassword'] == null ? undefined : json['keyPassword'],
        'keyAlias': json['keyAlias'] == null ? undefined : json['keyAlias'],
        'realmAlias': json['realmAlias'] == null ? undefined : json['realmAlias'],
        'format': json['format'] == null ? undefined : json['format'],
    };
}

export function KeyStoreConfigToJSON(value?: KeyStoreConfig | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'realmCertificate': value['realmCertificate'],
        'storePassword': value['storePassword'],
        'keyPassword': value['keyPassword'],
        'keyAlias': value['keyAlias'],
        'realmAlias': value['realmAlias'],
        'format': value['format'],
    };
}

