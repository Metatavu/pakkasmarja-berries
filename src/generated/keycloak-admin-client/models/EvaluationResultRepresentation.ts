/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DecisionEffect } from './DecisionEffect';
import {
    DecisionEffectFromJSON,
    DecisionEffectFromJSONTyped,
    DecisionEffectToJSON,
} from './DecisionEffect';
import type { PolicyResultRepresentation } from './PolicyResultRepresentation';
import {
    PolicyResultRepresentationFromJSON,
    PolicyResultRepresentationFromJSONTyped,
    PolicyResultRepresentationToJSON,
} from './PolicyResultRepresentation';
import type { ResourceRepresentation } from './ResourceRepresentation';
import {
    ResourceRepresentationFromJSON,
    ResourceRepresentationFromJSONTyped,
    ResourceRepresentationToJSON,
} from './ResourceRepresentation';
import type { ScopeRepresentation } from './ScopeRepresentation';
import {
    ScopeRepresentationFromJSON,
    ScopeRepresentationFromJSONTyped,
    ScopeRepresentationToJSON,
} from './ScopeRepresentation';

/**
 * 
 * @export
 * @interface EvaluationResultRepresentation
 */
export interface EvaluationResultRepresentation {
    /**
     * 
     * @type {ResourceRepresentation}
     * @memberof EvaluationResultRepresentation
     */
    resource?: ResourceRepresentation;
    /**
     * 
     * @type {Array<ScopeRepresentation>}
     * @memberof EvaluationResultRepresentation
     */
    scopes?: Array<ScopeRepresentation>;
    /**
     * 
     * @type {Array<PolicyResultRepresentation>}
     * @memberof EvaluationResultRepresentation
     */
    policies?: Array<PolicyResultRepresentation>;
    /**
     * 
     * @type {DecisionEffect}
     * @memberof EvaluationResultRepresentation
     */
    status?: DecisionEffect;
    /**
     * 
     * @type {Array<ScopeRepresentation>}
     * @memberof EvaluationResultRepresentation
     */
    allowedScopes?: Array<ScopeRepresentation>;
}

/**
 * Check if a given object implements the EvaluationResultRepresentation interface.
 */
export function instanceOfEvaluationResultRepresentation(value: object): boolean {
    return true;
}

export function EvaluationResultRepresentationFromJSON(json: any): EvaluationResultRepresentation {
    return EvaluationResultRepresentationFromJSONTyped(json, false);
}

export function EvaluationResultRepresentationFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvaluationResultRepresentation {
    if (json == null) {
        return json;
    }
    return {
        
        'resource': json['resource'] == null ? undefined : ResourceRepresentationFromJSON(json['resource']),
        'scopes': json['scopes'] == null ? undefined : ((json['scopes'] as Array<any>).map(ScopeRepresentationFromJSON)),
        'policies': json['policies'] == null ? undefined : ((json['policies'] as Array<any>).map(PolicyResultRepresentationFromJSON)),
        'status': json['status'] == null ? undefined : DecisionEffectFromJSON(json['status']),
        'allowedScopes': json['allowedScopes'] == null ? undefined : ((json['allowedScopes'] as Array<any>).map(ScopeRepresentationFromJSON)),
    };
}

export function EvaluationResultRepresentationToJSON(value?: EvaluationResultRepresentation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'resource': ResourceRepresentationToJSON(value['resource']),
        'scopes': value['scopes'] == null ? undefined : ((value['scopes'] as Array<any>).map(ScopeRepresentationToJSON)),
        'policies': value['policies'] == null ? undefined : ((value['policies'] as Array<any>).map(PolicyResultRepresentationToJSON)),
        'status': DecisionEffectToJSON(value['status']),
        'allowedScopes': value['allowedScopes'] == null ? undefined : ((value['allowedScopes'] as Array<any>).map(ScopeRepresentationToJSON)),
    };
}

