/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IdentityProviderRepresentation
 */
export interface IdentityProviderRepresentation {
    /**
     * 
     * @type {string}
     * @memberof IdentityProviderRepresentation
     */
    alias?: string;
    /**
     * 
     * @type {string}
     * @memberof IdentityProviderRepresentation
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof IdentityProviderRepresentation
     */
    internalId?: string;
    /**
     * 
     * @type {string}
     * @memberof IdentityProviderRepresentation
     */
    providerId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof IdentityProviderRepresentation
     */
    enabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof IdentityProviderRepresentation
     * @deprecated
     */
    updateProfileFirstLoginMode?: string;
    /**
     * 
     * @type {boolean}
     * @memberof IdentityProviderRepresentation
     */
    trustEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IdentityProviderRepresentation
     */
    storeToken?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IdentityProviderRepresentation
     */
    addReadTokenRoleOnCreate?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IdentityProviderRepresentation
     */
    authenticateByDefault?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IdentityProviderRepresentation
     */
    linkOnly?: boolean;
    /**
     * 
     * @type {string}
     * @memberof IdentityProviderRepresentation
     */
    firstBrokerLoginFlowAlias?: string;
    /**
     * 
     * @type {string}
     * @memberof IdentityProviderRepresentation
     */
    postBrokerLoginFlowAlias?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof IdentityProviderRepresentation
     */
    config?: { [key: string]: string; };
    /**
     * 
     * @type {boolean}
     * @memberof IdentityProviderRepresentation
     * @deprecated
     */
    updateProfileFirstLogin?: boolean;
}

/**
 * Check if a given object implements the IdentityProviderRepresentation interface.
 */
export function instanceOfIdentityProviderRepresentation(value: object): boolean {
    return true;
}

export function IdentityProviderRepresentationFromJSON(json: any): IdentityProviderRepresentation {
    return IdentityProviderRepresentationFromJSONTyped(json, false);
}

export function IdentityProviderRepresentationFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentityProviderRepresentation {
    if (json == null) {
        return json;
    }
    return {
        
        'alias': json['alias'] == null ? undefined : json['alias'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'internalId': json['internalId'] == null ? undefined : json['internalId'],
        'providerId': json['providerId'] == null ? undefined : json['providerId'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'updateProfileFirstLoginMode': json['updateProfileFirstLoginMode'] == null ? undefined : json['updateProfileFirstLoginMode'],
        'trustEmail': json['trustEmail'] == null ? undefined : json['trustEmail'],
        'storeToken': json['storeToken'] == null ? undefined : json['storeToken'],
        'addReadTokenRoleOnCreate': json['addReadTokenRoleOnCreate'] == null ? undefined : json['addReadTokenRoleOnCreate'],
        'authenticateByDefault': json['authenticateByDefault'] == null ? undefined : json['authenticateByDefault'],
        'linkOnly': json['linkOnly'] == null ? undefined : json['linkOnly'],
        'firstBrokerLoginFlowAlias': json['firstBrokerLoginFlowAlias'] == null ? undefined : json['firstBrokerLoginFlowAlias'],
        'postBrokerLoginFlowAlias': json['postBrokerLoginFlowAlias'] == null ? undefined : json['postBrokerLoginFlowAlias'],
        'config': json['config'] == null ? undefined : json['config'],
        'updateProfileFirstLogin': json['updateProfileFirstLogin'] == null ? undefined : json['updateProfileFirstLogin'],
    };
}

export function IdentityProviderRepresentationToJSON(value?: IdentityProviderRepresentation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'alias': value['alias'],
        'displayName': value['displayName'],
        'internalId': value['internalId'],
        'providerId': value['providerId'],
        'enabled': value['enabled'],
        'updateProfileFirstLoginMode': value['updateProfileFirstLoginMode'],
        'trustEmail': value['trustEmail'],
        'storeToken': value['storeToken'],
        'addReadTokenRoleOnCreate': value['addReadTokenRoleOnCreate'],
        'authenticateByDefault': value['authenticateByDefault'],
        'linkOnly': value['linkOnly'],
        'firstBrokerLoginFlowAlias': value['firstBrokerLoginFlowAlias'],
        'postBrokerLoginFlowAlias': value['postBrokerLoginFlowAlias'],
        'config': value['config'],
        'updateProfileFirstLogin': value['updateProfileFirstLogin'],
    };
}

