/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UPAttribute } from './UPAttribute';
import {
    UPAttributeFromJSON,
    UPAttributeFromJSONTyped,
    UPAttributeToJSON,
} from './UPAttribute';
import type { UPGroup } from './UPGroup';
import {
    UPGroupFromJSON,
    UPGroupFromJSONTyped,
    UPGroupToJSON,
} from './UPGroup';
import type { UnmanagedAttributePolicy } from './UnmanagedAttributePolicy';
import {
    UnmanagedAttributePolicyFromJSON,
    UnmanagedAttributePolicyFromJSONTyped,
    UnmanagedAttributePolicyToJSON,
} from './UnmanagedAttributePolicy';

/**
 * 
 * @export
 * @interface UPConfig
 */
export interface UPConfig {
    /**
     * 
     * @type {Array<UPAttribute>}
     * @memberof UPConfig
     */
    attributes?: Array<UPAttribute>;
    /**
     * 
     * @type {Array<UPGroup>}
     * @memberof UPConfig
     */
    groups?: Array<UPGroup>;
    /**
     * 
     * @type {UnmanagedAttributePolicy}
     * @memberof UPConfig
     */
    unmanagedAttributePolicy?: UnmanagedAttributePolicy;
}

/**
 * Check if a given object implements the UPConfig interface.
 */
export function instanceOfUPConfig(value: object): boolean {
    return true;
}

export function UPConfigFromJSON(json: any): UPConfig {
    return UPConfigFromJSONTyped(json, false);
}

export function UPConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): UPConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'attributes': json['attributes'] == null ? undefined : ((json['attributes'] as Array<any>).map(UPAttributeFromJSON)),
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(UPGroupFromJSON)),
        'unmanagedAttributePolicy': json['unmanagedAttributePolicy'] == null ? undefined : UnmanagedAttributePolicyFromJSON(json['unmanagedAttributePolicy']),
    };
}

export function UPConfigToJSON(value?: UPConfig | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attributes': value['attributes'] == null ? undefined : ((value['attributes'] as Array<any>).map(UPAttributeToJSON)),
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(UPGroupToJSON)),
        'unmanagedAttributePolicy': UnmanagedAttributePolicyToJSON(value['unmanagedAttributePolicy']),
    };
}

