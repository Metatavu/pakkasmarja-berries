/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RoleRepresentation } from './RoleRepresentation';
import {
    RoleRepresentationFromJSON,
    RoleRepresentationFromJSONTyped,
    RoleRepresentationToJSON,
} from './RoleRepresentation';

/**
 * 
 * @export
 * @interface ClientMappingsRepresentation
 */
export interface ClientMappingsRepresentation {
    /**
     * 
     * @type {string}
     * @memberof ClientMappingsRepresentation
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientMappingsRepresentation
     */
    client?: string;
    /**
     * 
     * @type {Array<RoleRepresentation>}
     * @memberof ClientMappingsRepresentation
     */
    mappings?: Array<RoleRepresentation>;
}

/**
 * Check if a given object implements the ClientMappingsRepresentation interface.
 */
export function instanceOfClientMappingsRepresentation(value: object): boolean {
    return true;
}

export function ClientMappingsRepresentationFromJSON(json: any): ClientMappingsRepresentation {
    return ClientMappingsRepresentationFromJSONTyped(json, false);
}

export function ClientMappingsRepresentationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientMappingsRepresentation {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'client': json['client'] == null ? undefined : json['client'],
        'mappings': json['mappings'] == null ? undefined : ((json['mappings'] as Array<any>).map(RoleRepresentationFromJSON)),
    };
}

export function ClientMappingsRepresentationToJSON(value?: ClientMappingsRepresentation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'client': value['client'],
        'mappings': value['mappings'] == null ? undefined : ((value['mappings'] as Array<any>).map(RoleRepresentationToJSON)),
    };
}

