/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProtocolMapperRepresentation } from './ProtocolMapperRepresentation';
import {
    ProtocolMapperRepresentationFromJSON,
    ProtocolMapperRepresentationFromJSONTyped,
    ProtocolMapperRepresentationToJSON,
} from './ProtocolMapperRepresentation';

/**
 * 
 * @export
 * @interface ClientTemplateRepresentation
 */
export interface ClientTemplateRepresentation {
    /**
     * 
     * @type {string}
     * @memberof ClientTemplateRepresentation
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientTemplateRepresentation
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientTemplateRepresentation
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientTemplateRepresentation
     */
    protocol?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ClientTemplateRepresentation
     */
    fullScopeAllowed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ClientTemplateRepresentation
     */
    bearerOnly?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ClientTemplateRepresentation
     */
    consentRequired?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ClientTemplateRepresentation
     */
    standardFlowEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ClientTemplateRepresentation
     */
    implicitFlowEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ClientTemplateRepresentation
     */
    directAccessGrantsEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ClientTemplateRepresentation
     */
    serviceAccountsEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ClientTemplateRepresentation
     */
    publicClient?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ClientTemplateRepresentation
     */
    frontchannelLogout?: boolean;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ClientTemplateRepresentation
     */
    attributes?: { [key: string]: string; };
    /**
     * 
     * @type {Array<ProtocolMapperRepresentation>}
     * @memberof ClientTemplateRepresentation
     */
    protocolMappers?: Array<ProtocolMapperRepresentation>;
}

/**
 * Check if a given object implements the ClientTemplateRepresentation interface.
 */
export function instanceOfClientTemplateRepresentation(value: object): boolean {
    return true;
}

export function ClientTemplateRepresentationFromJSON(json: any): ClientTemplateRepresentation {
    return ClientTemplateRepresentationFromJSONTyped(json, false);
}

export function ClientTemplateRepresentationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientTemplateRepresentation {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'protocol': json['protocol'] == null ? undefined : json['protocol'],
        'fullScopeAllowed': json['fullScopeAllowed'] == null ? undefined : json['fullScopeAllowed'],
        'bearerOnly': json['bearerOnly'] == null ? undefined : json['bearerOnly'],
        'consentRequired': json['consentRequired'] == null ? undefined : json['consentRequired'],
        'standardFlowEnabled': json['standardFlowEnabled'] == null ? undefined : json['standardFlowEnabled'],
        'implicitFlowEnabled': json['implicitFlowEnabled'] == null ? undefined : json['implicitFlowEnabled'],
        'directAccessGrantsEnabled': json['directAccessGrantsEnabled'] == null ? undefined : json['directAccessGrantsEnabled'],
        'serviceAccountsEnabled': json['serviceAccountsEnabled'] == null ? undefined : json['serviceAccountsEnabled'],
        'publicClient': json['publicClient'] == null ? undefined : json['publicClient'],
        'frontchannelLogout': json['frontchannelLogout'] == null ? undefined : json['frontchannelLogout'],
        'attributes': json['attributes'] == null ? undefined : json['attributes'],
        'protocolMappers': json['protocolMappers'] == null ? undefined : ((json['protocolMappers'] as Array<any>).map(ProtocolMapperRepresentationFromJSON)),
    };
}

export function ClientTemplateRepresentationToJSON(value?: ClientTemplateRepresentation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'protocol': value['protocol'],
        'fullScopeAllowed': value['fullScopeAllowed'],
        'bearerOnly': value['bearerOnly'],
        'consentRequired': value['consentRequired'],
        'standardFlowEnabled': value['standardFlowEnabled'],
        'implicitFlowEnabled': value['implicitFlowEnabled'],
        'directAccessGrantsEnabled': value['directAccessGrantsEnabled'],
        'serviceAccountsEnabled': value['serviceAccountsEnabled'],
        'publicClient': value['publicClient'],
        'frontchannelLogout': value['frontchannelLogout'],
        'attributes': value['attributes'],
        'protocolMappers': value['protocolMappers'] == null ? undefined : ((value['protocolMappers'] as Array<any>).map(ProtocolMapperRepresentationToJSON)),
    };
}

